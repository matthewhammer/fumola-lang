use std::str::FromStr;
use crate::ast::{Exp, BinOp};

grammar;

pub Exp: Box<Exp> = { // (1)
    Exp ExpOp Factor => Box::new(Exp::BinOp(<>)), // (2)
    Factor,
};

ExpOp: BinOp = { // (3)
    "+" => BinOp::Add,
    "-" => BinOp::Sub,
};

Factor: Box<Exp> = {
    Factor FactorOp Term => Box::new(Exp::BinOp(<>)),
    Term,
};

FactorOp: BinOp = {
    "*" => BinOp::Mul,
    "/" => BinOp::Div,
};

Term: Box<Exp> = {
    Num => Box::new(Exp::Number(<>)),
    "(" <Exp> ")"
};

Num: i32 = {
    r"[0-9]+" => i32::from_str(<>).unwrap()
};
